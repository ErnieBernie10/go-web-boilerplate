// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: save_frame.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const saveFrame = `-- name: SaveFrame :one
insert into frame (id, title, description, created_at)
values ($1, $2, $3, NOW())
on conflict (id)
DO UPDATE set title = $2, description = $3, modified_at = NOW()
RETURNING id
`

type SaveFrameParams struct {
	ID          uuid.UUID
	Title       string
	Description string
}

func (q *Queries) SaveFrame(ctx context.Context, arg SaveFrameParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, saveFrame, arg.ID, arg.Title, arg.Description)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
