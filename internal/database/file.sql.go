// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: file.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createFile = `-- name: CreateFile :exec
insert into file (id, file_name) values ($1, $2)
`

type CreateFileParams struct {
	ID       uuid.UUID
	FileName sql.NullString
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) error {
	_, err := q.db.ExecContext(ctx, createFile, arg.ID, arg.FileName)
	return err
}

const deleteFile = `-- name: DeleteFile :exec
delete from file where id = $1
`

func (q *Queries) DeleteFile(ctx context.Context, id uuid.UUID) error {
	_, err := q.db.ExecContext(ctx, deleteFile, id)
	return err
}

const getFileByID = `-- name: GetFileByID :one
select id, file_name, created_at, modified_at from file where id = $1
`

func (q *Queries) GetFileByID(ctx context.Context, id uuid.UUID) (File, error) {
	row := q.db.QueryRowContext(ctx, getFileByID, id)
	var i File
	err := row.Scan(
		&i.ID,
		&i.FileName,
		&i.CreatedAt,
		&i.ModifiedAt,
	)
	return i, err
}
